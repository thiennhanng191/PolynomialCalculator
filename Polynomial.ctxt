#BlueJ class context
comment0.target=Polynomial
comment0.text=\r\n\ Class\ of\ polynomial\ based\ on\ a\ TreeMap.\r\n\ @author\ Nhan\ Nguyen\r\n\ @version\ CMPU-102-HW3\r\n
comment1.params=
comment1.target=Polynomial()
comment1.text=\r\n\ Empty\ constructor\ for\ objects\ in\ class\ Polynomial\r\n
comment10.params=polyA
comment10.target=Polynomial\ sub(Polynomial)
comment10.text=\r\n\ Method\ to\ substract\ two\ polynomials\r\n\ @param\ polyA\ the\ polynomial\ to\ be\ substracted\ from\ the\ original\ polynomial\r\n\ @return\ the\ polynomial\ that\ is\ the\ difference\ between\ the\ original\ polynomial\ \r\n\ and\ the\ given\ polynomial\ \r\n
comment11.params=polyA
comment11.target=Polynomial\ mul(Polynomial)
comment11.text=\r\n\ Method\ to\ multiply\ two\ polynomials\r\n\ @param\ polyA\ the\ polynomial\ to\ be\ multiplied\ with\ the\ original\ polynomial\r\n\ @return\ the\ polynomial\ that\ is\ the\ multiplication\ of\ the\ two\ polynomials\r\n
comment12.params=polyA
comment12.target=Polynomial\ div(Polynomial)
comment12.text=\r\n\ Method\ to\ divide\ the\ original\ polynomial\ by\ a\ given\ polynomial\r\n\ @param\ polyA\ the\ polynomial\ given\ for\ the\ original\ to\ be\ divided\ by\ that\ polynomial\r\n\ @return\ the\ polynomial\ that\ is\ the\ division\ of\ the\ two\ polynomials\r\n\ @throws\ ArithmeticExeption\ if\ the\ divisor\ polynomial\ is\ equal\ to\ zero\ \r\n\ or\ if\ the\ remainder\ of\ the\ division\ is\ not\ equal\ to\ zero\r\n
comment2.params=exp\ coef
comment2.target=Polynomial(int,\ double)
comment2.text=\r\n\ Constructor\ for\ each\ monomial\ for\ the\ objects\ in\ class\ Polynomial\r\n\ @param\ exp\ the\ exponent\ of\ the\ monomial\ added\r\n\ @param\ coef\ the\ coefficent\ of\ the\ monomial\ added\r\n
comment3.params=polyA
comment3.target=Polynomial(Polynomial)
comment3.text=\r\n\ Constructor\ for\ objects\ in\ class\ Polynomial\ by\ cloning\ a\ given\ monomial\r\n\ @param\ polyA\ the\ poly\ given\ to\ be\ cloned\r\n
comment4.params=
comment4.target=java.lang.String\ toString()
comment4.text=\r\n\ create\ the\ visual\ representation\ of\ a\ polynomial\r\n\ @return\ a\ string\ representing\ a\ polynomial\r\n
comment5.params=
comment5.target=java.util.SortedMap\ getPoly()
comment5.text=\r\n\ get\ the\ map\ type\ of\ the\ polynomial\r\n\ @return\ the\ polynomial\ in\ the\ form\ of\ a\ map\r\n
comment6.params=exp\ coef
comment6.target=java.lang.Double\ put(int,\ double)
comment6.text=\r\n\ Method\ for\ putting\ a\ monomial\ to\ a\ poly\r\n\ @param\ exp\ the\ exponent\ of\ the\ monomial\ added\r\n\ @param\ coef\ the\ coefficient\ of\ the\ monomial\ added\r\n\ @return\ the\ previous\ coeffient\ if\ the\ added\ monomial's\ coeffient\ has\ already\ existed,\r\n\ null\ otherwise\r\n
comment7.params=polyCmp
comment7.target=boolean\ equals(Polynomial)
comment7.text=\r\n\ Method\ to\ compare\ two\ polynomials\r\n\ @param\ polyCmp\ the\ polynomial\ given\ to\ be\ compared\r\n\ @return\ true\ if\ the\ two\ polynomials\ are\ equal,\ false\ otherwise\r\n
comment8.params=
comment8.target=boolean\ checkPolyZero()
comment8.text=\r\n\ Method\ to\ check\ if\ the\ polynomial\ is\ equal\ to\ zero\r\n\ @return\ true\ if\ the\ polynomial\ is\ equal\ to\ zero,\ false\ otherwise\r\n
comment9.params=polyA
comment9.target=Polynomial\ add(Polynomial)
comment9.text=\r\n\ Method\ to\ add\ two\ polynomials\r\n\ @param\ polyA\ the\ polynomial\ to\ be\ added\ to\ the\ original\ polynomial\r\n\ @return\ the\ polynomial\ that\ is\ the\ sum\ of\ the\ two\ polynomials\r\n
numComments=13
